{
    margin: 0;
    border-collapse: collapse;
    box-sizing: border-box;
  }
  
  body {
    display: grid;
    grid-template-rows: min-content auto min-content;
    /* TODO: modify the line below to add the needed grid-template-areas for header, main, and footer elements*/
    grid-template-areas: "h h"
                         "m m"
                         /* "m"
                         "m"
                         "m" */
                         "f f";
    height: 100vh;
  }
  
  main {
    background-color: antiquewhite;
    width: 100%;
    height: 100%;
    grid-area: m;
    grid-template-areas:"artic"
  }
  
  header {
    background-color: lavender;
    width: 100%;
    padding: 1.5rem;
    grid-area: h;
  }
  
  article {
    background-color: lightblue;
    border: solid;
    margin: 0;
    display: grid;
    /* TODO: modify the line below to add the needed grid-template-areas for sections and articles.
    
    For placing areas side-by-side, the syntax is simple, for example:
      grid-template-areas:    "a1 b1"
                              "a2 b2";
    */
    grid-template-areas: 
  "sec1 as1"
  "sec2 as2"  
  "sec3 .";
    grid-area: artic;
    height: 100%;
  }
  
  section {
    border: solid;
    /* box-sizing: border-box; */
    margin: 0;
  }
  
  aside {
    border: solid;
    /* box-sizing: border-box; */
    background-color: cornflowerblue;
    margin: 0;
  }
  
  footer {
    background-color: darkslategray;
    display: grid;
    /* TODO: modify the line below to add the needed grid-template-areas for the navigation elements*/
    padding: 1.5rem;
    grid-area: f;
    grid-template-areas: "nav1 nav2";
  }
  /* nav {
  border: solid;
  } */
  
  
  /* TODO: add the needed CSS rules below to set the required grid-area for each element with an ID, including the sections, asides, and navigation elements. 
  
  An example:
  #element_id {
      grid-area: ONE_OF_GRID_TEMPLATE_AREAS;
  }
  
  
  */
  #sec1 {
    grid-area: sec1;
  }
  #sec2 {
    grid-area: sec2;
  }
  #sec3 {
    grid-area: sec3;
  }
  #aside1 {
    grid-area: as1;
  }
  #aside2 {
    grid-area: as2;
  }
  #nav1 {
      grid-area: nav1;
    }
  #nav2 {
      grid-area: nav2;
    }

  @media only screen and (max-width: 600px) {
        article {
          grid-template-areas:
                        "sec1"
                        "sec2"
                        "sec3"
                        "as1"
                        "as2";
  
      }
      footer {
          grid-template-areas:
                        "nav1"
                        "nav2";
      }
  }
  @media only screen and (min-width: 600px) and (max-width: 767px) {
     article {
          grid-template-areas:
                        "sec1 sec2"
                        "sec3 as1"
                        "as2 ."
  
      }
      footer {
          grid-template-areas:
                        "nav1 nav2"
      }
  }
  @media only screen and (min-width: 768px) and (max-width: 991px) {
    article {
         grid-template-areas:
                       "sec1 sec2"
                       "sec3 as1"
                       "as2 ."
 
     }
     footer {
         grid-template-areas:
                       "nav1 nav2"
     }
 }
 @media only screen and (min-width: 992px) and (max-width: 1199px) {
  article {
        grid-template-areas:
                      "sec1 sec2 sec3"
                      "as1 as2 ."

    }
    footer {
        grid-template-areas:
                      "nav1 . nav2"
    }
}
  @media only screen and (min-width: 1200px) {
    article {
          grid-template-areas:
                        "sec1 sec2 sec3"
                        "as1 as2 ."
  
      }
      footer {
          grid-template-areas:
                        "nav1 . nav2"
      }
  }
  
  
 